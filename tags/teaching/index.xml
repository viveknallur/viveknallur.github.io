<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teaching on Vivek Nallur</title>
    <link>http://viveknallur.github.io/tags/teaching/index.xml</link>
    <description>Recent content in Teaching on Vivek Nallur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; by Vivek Nallur</copyright>
    <atom:link href="http://viveknallur.github.io/tags/teaching/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mini-Project Options</title>
      <link>http://viveknallur.github.io/teaching/project-list/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/project-list/</guid>
      <description>&lt;p&gt;Here are a list of projects that your group can choose from, for the scrum-based
mini-project.
&lt;/p&gt;

&lt;h4 id=&#34;android-app-for-inventory-tracking&#34;&gt;Android App for Inventory Tracking&lt;/h4&gt;

&lt;hr/&gt;

&lt;p&gt;Groups and teams often invest in equipment for a specific project. This
equipment usually has a barcode that is used to uniquely identify it. Equipment
is allocated to an individual or a team, for a specified period. After this
period is over, the equipment must be reclaimed from the individual/group.&lt;/p&gt;

&lt;p&gt;The app must be able to:&lt;/p&gt;

&lt;p&gt;a) Add equipment by scanning the barcode
b) Add/Remove individuals
c) Add/Remove individuals to/from teams
d) Add/Remove individuals/teams to/from projects
e) Add/Retire projects&lt;/p&gt;

&lt;p&gt;For a more detailed description of the project, register your group with the
faculty (one email per group).&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;statistical-visualization-using-r&#34;&gt;Statistical Visualization Using R&lt;/h4&gt;

&lt;hr/&gt;

&lt;p&gt;The Govt. of Ireland releases datasets collected about various aspects of
society, in the form of OpenData. This project will create a library to download
multiple datasets (in CSV/JSON format) and visualize the relationships between
various factors. This visualization must be dynamic, i.e., the user must be able
to specify factors at runtime. The library should be able to cross-link data
across datasets (if sensible).&lt;/p&gt;

&lt;p&gt;For a more detailed description of the project, register your group with the
faculty (one email per group).&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;web-based-application-for-visualizing-social-network-data&#34;&gt;Web-based application for visualizing social network data&lt;/h4&gt;

&lt;p&gt;There are several social network APIs available that allow a user to visualize
how they are connected with other people. The project will use (atleast) two
social networks and visualize the number of cross-connections that users
have.The project will visualize the following data about a particular user:&lt;/p&gt;

&lt;p&gt;a) Correlation between the user and the user&amp;rsquo;s top-20 &amp;lsquo;friends&amp;rsquo; frequency of
posting
b) Correlation between the user and the user&amp;rsquo;s top-20 &amp;lsquo;friends&amp;rsquo; time of posting
c) Correlation between the user and the user&amp;rsquo;s top-20 &amp;lsquo;friends&amp;rsquo; &amp;lsquo;likes&amp;rsquo; for the
last year&lt;/p&gt;

&lt;p&gt;The project must be able to accept a user-id, and time-period for which the
analysis needs to be done.&lt;/p&gt;

&lt;p&gt;For a more detailed description of the project, please register your group with
the faculty (one email per group).
&lt;hr/&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Schedule for client meetings</title>
      <link>http://viveknallur.github.io/teaching/real-time-availability/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/real-time-availability/</guid>
      <description>&lt;p&gt;Teams may want to interact with the client during the mini-project. For this
purpose, some lecture slots have been converted to client meeting days. The
following days and times are available for client meetings.  The location for
these client meetings are the lecture-rooms, that were previously used for that
weekday&amp;rsquo;s lecture.  10-minute slots will be available for each team, that books
a slot by emailing the faculty, in advance.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;available-client-meetings&#34;&gt;Available Client Meetings&lt;/h4&gt;

&lt;p&gt;The link below shows the currently booked and available meeting slots for the
mini-project. The page is refreshed every 5 minutes from data confirmed by the
faculty.&lt;/p&gt;

&lt;p&gt;Meeting &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1a_nLugeUsKC9g2fWKMTCRFpmsYUBn-uT3VMZ8C_9GVE/pubhtml&#34;&gt;schedule
&lt;/a&gt;&lt;/p&gt;

&lt;hr/&gt;</description>
    </item>
    
    <item>
      <title>Understanding Blackboard for CS3012</title>
      <link>http://viveknallur.github.io/teaching/understanding-blackboard-scores/</link>
      <pubDate>Wed, 18 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/understanding-blackboard-scores/</guid>
      <description>&lt;p&gt;Recall that there are two components to the module evaluation:
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Theory (evaluated using an exam) &amp;ndash; 30% of your final mark&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Practical (evaluated using assignments and a mini-project) &amp;ndash; 70% of your
final mark&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://viveknallur.github.io/images/cs3012/OverallAssessment.png&#34; alt=&#34;Overall Assessment&#34; title=&#34;Overall assessment
pattern&#34; /&gt;&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;programming-assignment-marks&#34;&gt;Programming Assignment Marks&lt;/h4&gt;

&lt;p&gt;The individual programming assignments cummulatively account for 35% of your total mark. Hence,
all marks will finally be scaled to 35. Blackboard will show 7 columns for your programming assignments. The columns:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ProgAssgn-Coding&lt;/em&gt;: Cummulative score from the test-cases, across 4 assignments. Max marks - 20&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ProgAssgn-ZScore&lt;/em&gt;: Cummulative score from the AverageVelocity across 4 assignments. Max marks - 20&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ProgAssgn-PersonalTrend&lt;/em&gt;: Personal Trend score according to the slope of your AverageVelocity. Max marks - 10&lt;/p&gt;

&lt;p&gt;&lt;em&gt;WeightedCodingMark&lt;/em&gt;: Coding accounts for 50% of your programming assignment mark. Max marks - 17.5&lt;/p&gt;

&lt;p&gt;&lt;em&gt;WeightedZScore&lt;/em&gt;: The Z-Score accounts for 25% of your programing assignment mark. Max marks - 8.75&lt;/p&gt;

&lt;p&gt;&lt;em&gt;WeightedPersonalTrend&lt;/em&gt;: The Personal Trend accounts for 25% of your programming assignment mark. Max marks - 8.75&lt;/p&gt;

&lt;p&gt;The seventh column shows the aggregate marks (out of 35). The aggregate marks for the programming assignments are a summation of: &lt;em&gt;WeightedCodingMark&lt;/em&gt;, &lt;em&gt;WeightedZScore&lt;/em&gt;, &lt;em&gt;WeightedPersonalTrend&lt;/em&gt;.&lt;/p&gt;

&lt;h6 id=&#34;note-these-marks-have-been-uploaded-to-blackboard-if-you-don-t-see-a-mark-for-yourself-please-send-an-email-to-vivek-nallur-scss-tcd-ie&#34;&gt;&lt;strong&gt;NOTE: These marks have been uploaded to Blackboard. If you don&amp;rsquo;t see a mark for yourself, please send an email to: vivek.nallur@scss.tcd.ie&lt;/strong&gt;&lt;/h6&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;scrum-based-mini-project&#34;&gt;Scrum-Based Mini-Project&lt;/h4&gt;

&lt;p&gt;Each project will be graded independently by three graders. Each grader will grade the sprints, as well as the final deliverable, and award a total mark out of 100. The marking table for the  mini-project is as follows:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Marks&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt; 40&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;More than one deliverable missing; Committed documents unacceptable/incorrect/low quality&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;40-50&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Minimally correct, but barely adequate,  more than one deliverable missing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;51-70&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Adequate; one/more faults present  or one deliverable missing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;71-85&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Fairly good; No major faults; all deliverables present; minor obvious improvements possible&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;86-100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Very good; Can expect to manage a project well, given evidence from deliverables&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&#34;note-marks-for-the-project-have-not-yet-been-uploaded-to-blackboard-marks-will-be-scaled-from-the-total-mark-to-a-maximum-of-35&#34;&gt;&lt;strong&gt;NOTE: Marks for the project have not yet been uploaded to Blackboard. Marks will be scaled from the total mark to a maximum of 35.&lt;/strong&gt;&lt;/h6&gt;</description>
    </item>
    
    <item>
      <title>CS3012 - Assessment</title>
      <link>http://viveknallur.github.io/teaching/assessment/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/assessment/</guid>
      <description>&lt;p&gt;The assessment pattern for the module is as follows:

There are two components to the module evaluation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Theory (evaluated using an exam) &amp;ndash; 30% of your final mark&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Practical (evaluated using assignments and a mini-project) &amp;ndash; 70% of your
final mark&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://viveknallur.github.io/images/cs3012/OverallAssessment.png&#34; alt=&#34;Overall Assessment&#34; title=&#34;Overall assessment
pattern&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There is a difference between software engineering &amp;lsquo;in-the-large&amp;rsquo; and software
engineering &amp;lsquo;in-the-small&amp;rsquo;. As explained during the first class, most of the
lecture material covers software engineering in the large. Large, means teams
that comprise multiple individuals acting as requirements analysts, software
architects and designers, coders, testers, deployment engineers, etc. Typically,
the set of people involved in such a process is on the order of tens of
individuals (if not hundreds or thousands, for larger projects). Given our
current class size and constraints on time, it is not possible to create
assignments that involve group sizes of 15-25 people and evaluate them (as a
group, and as individuals) continuously, over the period of the term. This is
why the evaluation pattern tries to evaluate software engineering in the small.
Software Engineering in-the-small attempts to measure and evaluate the personal
productivity AND predictability of an individual over a period of time. This is
why there are programming assignments that you submit (personal productivity)
along with the EngineersLog (personal predictability) every week. We also
evaluate group-work that allows students to put into practise some of the
software engineering theory that they have been taught. Group-work will be done
via a mini-project, that must be performed using the Scrum methodology.  This is
still engineering in-the-small due to group and project size. Details of the
mini-project can be found &lt;a href=&#34;http://viveknallur.github.io/teaching/project&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The evaluation of the individual assignments is explained below.&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;evaluating-an-individual-assignment&#34;&gt;Evaluating an individual assignment&lt;/h4&gt;

&lt;p&gt;Each individual assignment has three components that contribute toward your
mark:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Test cases&lt;/em&gt;: A test case reflects logical correctness of your code.&lt;br /&gt;
Ultimately, a system that does not generate the correct output for the
client/user, is not of much value. The test-cases, therefore, test your
submitted code with boundary conditions and checks for correct output. A
test-case will &lt;em&gt;always&lt;/em&gt; meet the input specification. It is your responsibility
to ensure that your output meets the output specification. Do &lt;em&gt;not&lt;/em&gt; output
anything other than what is asked for. For every &lt;em&gt;System.out.println()&lt;/em&gt; you use,
ask yourself whether it meets the output specification or not.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Your z-score&lt;/em&gt;: Predictability is an important part of being a good software
engineer. Given a problem, you should be able to predict how long it will
take for you to completely solve it. The Engineer&amp;rsquo;s Log tries to capture this
notion by recording your own estimate of three tasks: (a) design, (b) code, and
&amp;copy; test. Dividing your actual time by the estimated time for each task, gives
you the velocity for each task. Your AverageVelocity for an assignment, is the
average of the three velocities for that assignment. While this number is useful
in isolation, it is even more useful to measure your AverageVelocity against
your peers. This is done by calculating your
&lt;a href=&#34;http://www.wikihow.com/Calculate-Z-Scores&#34;&gt;z-score&lt;/a&gt;. The z-score allows us to
know how students are performing, relative to each other.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Your personal trend&lt;/em&gt;:  The first few estimates are (effectively) random
guesses, unless you have estimated your own performance before. Since all the
assignments will be of comparable complexity, you are effectively solving
similar problems, again and again. This should allow you to get better estimates
about your own performance. The more you practise estimation, the better you
will get at it. Do not forget to use your previous estimates and actuals as
guides for the next assignment. Over a period of time, your AverageVelocity will
start to approach one (1). Calculating the trend of your AverageVelocity over
multiple assignments measures how much you are improving in your estimation
accuracy. This effectively measures you against your own previous performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The individual assignment, therefore, evaluates you on three axes: (a)
correctness, (b) performance vis-a-vis peers, ( c) performance vis-a-vis past
performance&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://viveknallur.github.io/images/cs3012/Assignment-Assessment-Pattern.png&#34; alt=&#34;Assignment Assessment Pattern&#34; title=&#34;The assessment pattern for cs3012&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of our demonstrators, Gary Munnelly, has put together a little document
along with code, test-cases, and scripts to give you a flavour of how the
evaluation of the individual assignments is done. Check it out
&lt;a href=&#34;http://viveknallur.github.io/misc/sample_test_case.tar.gz&#34;&gt;here&lt;/a&gt;. Thanks a bunch, Gary!&lt;/p&gt;

&lt;hr/&gt;

&lt;h5 id=&#34;test-cases&#34;&gt;Test Cases&lt;/h5&gt;

&lt;p&gt;The number of testcases may be different for each assignment, however your score
will always be normalized to 5. That is, your maximum score will be five (5), if
all test cases pass. The minimum score will be zero (0), if:&lt;br/&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;No test cases pass&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Code does not compile (program does not run)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Your code will be compiled using the following command: &lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javac YourCode.java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your code will receive input using the following command:&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java YourCode &amp;lt; testinput1
&lt;/code&gt;&lt;/pre&gt;

&lt;hr/&gt;

&lt;h5 id=&#34;z-score&#34;&gt;Z-score&lt;/h5&gt;

&lt;p&gt;The &lt;em&gt;Average Velocity&lt;/em&gt; of an assignment is calculated as: &lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AverageVelocityOfStudent = (AverageVelocityOfDesign + AverageVelocityOfCoding + AverageVelocityOfTesting) / 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After calculating the Average Velocity of each student, the arithmetic mean
velocity and the standard-deviation of the entire class is calculated.&lt;/p&gt;

&lt;p&gt;A student&amp;rsquo;s &lt;em&gt;z-score&lt;/em&gt; = &lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(AverageVelocityOfStudent - ArithmeticMean)/standard-deviation
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;z-score&lt;/em&gt; is then bagged using the following rules: &lt;br/&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;More than 1-standard deviation &lt;em&gt;below&lt;/em&gt; the mean ==&amp;gt; 5 &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Between 1-standard deviation below mean and mean(incl. mean) ==&amp;gt; 4 &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Up to 1-standard deviation &lt;em&gt;above&lt;/em&gt; mean =&amp;gt; 3 &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;More than 1-standard deviation &lt;em&gt;above&lt;/em&gt; mean but less than 2-standard
deviations ==&amp;gt; 2 &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2-standard deviations and more &lt;em&gt;above&lt;/em&gt; the mean ==&amp;gt; 1 &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;personal-trend&#34;&gt;Personal Trend&lt;/h4&gt;

&lt;p&gt;A student&amp;rsquo;s personal trendline is calculated as the best-fit straight line using
the average velocities over all the assignments. The slope of this trendline
shows the rate of change of AverageVelocity with continued assignments. All
students should (ideally) have a negative slope, by the end of the course.
The slope indicates the improvement made over the period of the assignments. The more
negative the slope, the greater the improvement, and correspondingly higher the score.
A positive slope indicates that the student&amp;rsquo;s AverageVelocity has worsened over time.&lt;/p&gt;

&lt;p&gt;Each student&amp;rsquo;s slope is calculated and binned according to the table shown below. The student&amp;rsquo;s personal trend score depends on the first bin, that the slope falls into.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Bin&lt;/th&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Less than/equal to -0.77598254&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-0.586965079&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-0.397947619&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-0.208930159&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-0.019912698&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.169104762&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.358122222&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.547139683&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.736157143&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.925174603&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr/&gt;</description>
    </item>
    
    <item>
      <title>Mini-Project using Scrum</title>
      <link>http://viveknallur.github.io/teaching/project/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/project/</guid>
      <description>&lt;p&gt;The process of the mini-project, to be developed using the scrum methodology, is
detailed here.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;group-selection-and-registration&#34;&gt;Group Selection and Registration&lt;/h4&gt;

&lt;p&gt;All students must form groups and register their group with the faculty. A group
can be formed with 4-6 students. Students are free to form groups of their
choice, with the caveat that one student can only belong to one group
(obviously!). It is the students&amp;rsquo; responsibility to ensure that all members of
the group are willing and able to collaborate with each other, since scrum
demands a high level of self-organization.&lt;/p&gt;

&lt;p&gt;Things to do after group formation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select a team-leader. This is the person who will be the contact point
between the team and the faculty.&lt;/li&gt;
&lt;li&gt;The team-leader sends an email to the faculty, registering the group
(remember to cc your group members)&lt;/li&gt;
&lt;li&gt;Select your project, and inform the faculty.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of the above steps should be &lt;em&gt;finished&lt;/em&gt; before 14-November-2016&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;project-selection&#34;&gt;Project Selection&lt;/h4&gt;

&lt;p&gt;There are three projects outlined on the &lt;a href=&#34;http://viveknallur.github.io/teaching/project-list&#34;&gt;projects&lt;/a&gt;
page.  As a group, select one of the projects, according to your language and
technology preference.&lt;/p&gt;

&lt;p&gt;Project selection should be &lt;em&gt;finished&lt;/em&gt; before 14-November-2016. Project
development will start on 14-November-2016, when the client outlines his
detailed requirements. The faculty will act as the client for the duration of
the project.&lt;/p&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;project-development&#34;&gt;Project Development&lt;/h4&gt;

&lt;p&gt;Project development will be done using the scrum methodology. This entails
weekly sprint cycles. After the client describes the project requirements, the
team will create a &lt;u&gt;Product Backlog&lt;/u&gt; and a &lt;u&gt;Burn-down Chart&lt;/u&gt;. The
final and weekly deliverables will be given in the detailed project
requirements. To enable weekly sprint cycles, and meetings with the client, some
lectures will be converted to meeting time. Teams can request the client for a
meeting, by booking an &lt;a href=&#34;http://viveknallur.github.io/teaching/client-meetings&#34;&gt;available slot&lt;/a&gt;.  Code must
be committed to the team-leader&amp;rsquo;s repository (same as the one being used for the
assignments), on the &amp;lsquo;project&amp;rsquo; branch, for every weekly sprint cycle.&lt;/p&gt;

&lt;p&gt;There will be four sprint cycles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;14-November to 21-November&lt;/li&gt;
&lt;li&gt;22-November to 28-November&lt;/li&gt;
&lt;li&gt;29-November to 5-December&lt;/li&gt;
&lt;li&gt;6-December to 12-December&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sprint deliverables are due the day after the end of the sprint. A list of
sprint deliverables and their schedule can be found
&lt;a href=&#34;http://viveknallur.github.io/teaching/scrum-schedule&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
At the end of the second sprint cycle, a &lt;em&gt;change request&lt;/em&gt; will be initiated by
the client. This will modify the &lt;em&gt;Product Backlog&lt;/em&gt;.
&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;The end of the fourth sprint cycle marks the end of the project, and the &lt;em&gt;Final
Deliverables&lt;/em&gt; mentioned in the detailed requirements must be committed to the
team-leader&amp;rsquo;s repository by the end of 13-December, at the latest.&lt;/p&gt;

&lt;hr/&gt;</description>
    </item>
    
    <item>
      <title>Schedule for Scrum Deliverables</title>
      <link>http://viveknallur.github.io/teaching/scrum-schedule/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/scrum-schedule/</guid>
      <description>&lt;p&gt;Here is a list of, and schedule for, the scrum deliverables.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;sprint-weekly-deliverables&#34;&gt;Sprint (weekly) deliverables&lt;/h4&gt;

&lt;p&gt;Sprint deliverable(s) from all teams (committed and pushed to their respective team-leader&amp;rsquo;s repository), are due by end-of-day (6 p.m.) on:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;22-November-2016&lt;/li&gt;
&lt;li&gt;29-November-2016&lt;/li&gt;
&lt;li&gt;6-December-2016&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&#34;list-of-sprint-deliverables&#34;&gt;List of sprint deliverables:&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;Burn-down chart&lt;/li&gt;
&lt;li&gt;Product Backlog&lt;/li&gt;
&lt;li&gt;Sprint Backlog&lt;/li&gt;
&lt;li&gt;Risk-Exposure Table&lt;/li&gt;
&lt;/ol&gt;

&lt;hr/&gt;

&lt;h4 id=&#34;final-deliverables&#34;&gt;Final deliverables&lt;/h4&gt;

&lt;p&gt;The fourth sprint cycle (6-Dec to  12-Dec) culminates with the final deliverables. Every project has its own list of final deliverables. These  must be committed and pushed to the respective team-leader&amp;rsquo;s repository by end-of-day (6 p.m.) on: 13-December-2016&lt;/p&gt;

&lt;h5 id=&#34;list-of-common-final-deliverables&#34;&gt;List of (common) final deliverables:&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;Signed (by all team members) declaration of work proportion&lt;/li&gt;
&lt;/ol&gt;

&lt;hr/&gt;</description>
    </item>
    
    <item>
      <title>Slides for CS3012</title>
      <link>http://viveknallur.github.io/teaching/slides/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/slides/</guid>
      <description>&lt;p&gt;Slides from the lectures for the CS 3012 course on Software Engineering can be
found here.
&lt;/p&gt;

&lt;h5 id=&#34;slides&#34;&gt;Slides&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/01-introduction.pdf&#34;&gt;Introduction to the Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/02-slides.pdf&#34;&gt;Requirements Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/03-slides.pdf&#34;&gt;Usecase Modelling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/04-slides.pdf&#34;&gt;Software Estimation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/05-intro-to-architecture.pdf&#34;&gt;Introduction to Software Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/06-slides.pdf&#34;&gt;Architectural Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/07-slides.pdf&#34;&gt;Architectural Styles - Continued&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/08-intro-to-uml-class-diag.pdf&#34;&gt;Introduction to UML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/09-intro-sequence-activity-diagrams.pdf&#34;&gt;Introduction to Sequence Diagrams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/10-other-structural-diagrams.pdf&#34;&gt;Other UML Diagrams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/11-intro-to-design-patterns.pdf&#34;&gt;Intro to Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/12-more-design-patterns.pdf&#34;&gt;More Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/13-usability-and-interaction.pdf&#34;&gt;Usability and Interaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/14-sw-development-processes.pdf&#34;&gt;Software Development Processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/15-xp-scrum.pdf&#34;&gt;XP and Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/16-risk-mgmt.pdf&#34;&gt;Risk Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/17-software-testing.pdf&#34;&gt;Software Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/18-biz-aspects-se.pdf&#34;&gt;Business and Legal Aspects of Software Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://viveknallur.github.io/slides/recap-lecture.pdf&#34;&gt;Re-cap Lecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CS3012 - Software Engineering</title>
      <link>http://viveknallur.github.io/teaching/cs3012/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://viveknallur.github.io/teaching/cs3012/</guid>
      <description>&lt;p&gt;This is the landing page for the CS 3012 course on Software Engineering.

Here you can find announcements regarding the course, assignments, and other
miscellaneous information. Take a look at the &lt;a href=&#34;http://viveknallur.github.io/teaching/&#34;&gt;other pages&lt;/a&gt; for more
information about the course.&lt;/p&gt;

&lt;h4 id=&#34;announcements&#34;&gt;Announcements&lt;/h4&gt;

&lt;hr/&gt;

&lt;p&gt;Students who need programming help are encouraged to contact the &lt;a href=&#34;https://www.scss.tcd.ie/misc/psc/&#34;&gt;Undergraduate
Programming Centre&lt;/a&gt;. They run individual and
group workshops that are tailored to the students&amp;rsquo; programming ability.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;p&gt;List of demonstrators you can contact:&lt;br/&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;mailto:paladea@scss.tcd.ie&#34;&gt;Andrei Palade&lt;/a&gt; &amp;ndash;&amp;gt; For all gitlab queries/help&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;mailto:amcgover@scss.tcd.ie&#34;&gt;Aonghus McGovern&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;mailto:cabrerac@scss.tcd.ie&#34;&gt;Christian Cabrera&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;mailto:munnellg@scss.tcd.ie&#34;&gt;Gary Munelly&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;mailto:whiteg5@scss.tcd.ie&#34;&gt;Gary White&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;assignments&#34;&gt;Assignments&lt;/h4&gt;

&lt;hr/&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download your Engineer&amp;rsquo;s Log &lt;a href=&#34;http://viveknallur.github.io/misc/EngineerLog.csv&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access assignment-1 &lt;a href=&#34;http://viveknallur.github.io/misc/ricebugs.pdf&#34;&gt;here&lt;/a&gt;. Test cases
&lt;a href=&#34;http://viveknallur.github.io/misc/ass1_testcases.tar.bz2&#34;&gt;here&lt;/a&gt; &lt;br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access assignment-2 &lt;a href=&#34;http://viveknallur.github.io/misc/assignment-2.pdf&#34;&gt;here&lt;/a&gt;. Test cases &lt;a href=&#34;http://viveknallur.github.io/misc/assgn2_testcases.tar.bz2&#34;&gt;here&lt;/a&gt; &lt;/br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access assignment-3 &lt;a href=&#34;http://viveknallur.github.io/misc/assignment-3.pdf&#34;&gt;here&lt;/a&gt;. Test cases &lt;a href=&#34;http://viveknallur.github.io/misc/assgn3_testcases.tar.bz2&#34;&gt;here&lt;/a&gt; &lt;/br/&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access assignment-4 &lt;a href=&#34;http://viveknallur.github.io/misc/assignment-4.pdf&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;gitlab&#34;&gt;Gitlab&lt;/h4&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;p&gt; We seem to be having problems with Gitlab (developers are not granted
&lt;code&gt;push&lt;/code&gt; access to the master branch, by default). You can get around this
with the following set of commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;your-directory&amp;gt; git clone http://gitlab.scss.tcd.ie/vivek.nallur/cs3012_&amp;lt;yourusername&amp;gt;.git
your-director&amp;gt; cd cs3012_&amp;lt;yourusername&amp;gt;/
your-cs3012_username-directory&amp;gt; git checkout -b assignments
your-cs3012_username-directory&amp;gt; mkdir 2
your-cs3012_username-directory&amp;gt; cd 2
your-cs3012_username-directory&amp;gt; git add yourfile.java
your-cs3012_username-directory&amp;gt; git add EngineersLog.csv
your-cs3012_username-directory&amp;gt; git commit -a -m &amp;quot;submission for assignment 2&amp;quot;
your-cs3012_username-directory&amp;gt; git push origin assignments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remember to push to the &amp;lsquo;assignments&amp;rsquo; branch and not &amp;lsquo;master&amp;rsquo;.&lt;/p&gt;

&lt;hr/&gt;</description>
    </item>
    
  </channel>
</rss>